import*as THREE from"https://cdnjs.cloudflare.com/ajax/libs/three.js/0.153.0/three.module.min.js";let mousePos=[0,0];apply();async function apply(){const e=document.getElementsByClassName("three-2d-container"),t=document.getElementsByClassName("three-3d-container"),n=document.getElementsByClassName("three-3dr-container");for(let t of e)setupCanvas(t,getOrthographicCamera(t),getPlaneMesh(await getShader(t)),animate);for(let e of t)setupCanvas(e,getPerspectiveCamera(e),getBoxMesh(await getShader(e)),animate);for(let e of n)setupCanvas(e,getPerspectiveCamera(e),getBoxMesh(await getShader(e)),animateRotate)}function setupCanvas(e,t,n,s){const i=new THREE.Scene,o=new THREE.WebGLRenderer;o.shadowMap.enabled=!0,o.setSize(e.offsetWidth,e.offsetHeight),e.appendChild(o.domElement),i.add(n),o.render(i,t),s(o,i,t,n)}function getPlaneMesh(e){const t=new THREE.PlaneGeometry(2,2);return new THREE.Mesh(t,e)}function getBoxMesh(e){const t=new THREE.BoxGeometry(1,1,1);return new THREE.Mesh(t,e)}function getOrthographicCamera(){return new THREE.OrthographicCamera(-1,1,1,-1,0,10)}function getPerspectiveCamera(e){const t=new THREE.PerspectiveCamera(75,e.offsetWidth/e.offsetHeight,.1,1e3);return t.position.z=2,t}async function getShader(e){e.addEventListener("mousemove",t=>{mousePos=[t.offsetX,e.offsetHeight-t.offsetY]});let t="void main() {gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);}",n="void main() {gl_FragColor = vec4(1.0);}";const s=e.querySelector(".vertex-file"),o=e.querySelector(".fragment-file");s&&(t=await retrieveShader(s.textContent)),o&&(n=await retrieveShader(o.textContent));const i=e.querySelector(".vertex-shader"),a=e.querySelector(".fragment-shader");return i&&(t=i.textContent),a&&(n=a.textContent),new THREE.ShaderMaterial({uniforms:{u_time:{type:"f",value:0},u_resolution:{value:new THREE.Vector2(e.offsetWidth,e.offsetHeight)},u_mouse:{value:new THREE.Vector2(mousePos[0],mousePos[1])}},vertexShader:t,fragmentShader:n})}function animate(e,t,n,s){requestAnimationFrame(()=>animate(e,t,n,s)),s.material.uniforms.u_time.value+=.01,s.material.uniforms.u_mouse.value=new THREE.Vector2(mousePos[0],mousePos[1]),e.render(t,n)}function animateRotate(e,t,n,s){requestAnimationFrame(()=>animateRotate(e,t,n,s)),s.material.uniforms.u_time.value+=.01,s.rotation.x+=.005,s.rotation.y+=.005,e.render(t,n)}async function retrieveShader(e){const t=await fetch(e);return t.text()}